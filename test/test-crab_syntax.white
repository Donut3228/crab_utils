#!/bin/bash
#{
	asdads
#}
echo "$0 $@ [$$] START" >&2

### strongbash008 Обязательно использовать #!/bin/bash даже в include'

### strongbash002 Не установлен set -eu
set -euEo pipefail

### strongbash019
sys::usage "$@"
### --help Example: crab_syntax test-crab_syntax.white

### strongbash001 Не выполнен crab_indent
{
	echo indent fail
}


### strongbash003 Нельзя использовать || true в условных выражениях
[ 1 = 2 ] && echo yes || echo no

### strongbash004 Нельзя использовать else true в условных выражениях
if false; then
	echo yes
else
	echo no
fi

### strongbash005 $count_func!=$count_end_return
### В конце каждой функции должен быть return 0 или return $ret'
FAIL005(){
	[ 1 = 2 ] && return 1
	echo yes
	ret=0
	return $ret
}

FAIL005_1(){
	[ 1 = 2 ] && return 1
	echo yes
	return 0
}


### strongbash009 Нельзя использовать let тк дает ошибку при переходе через 0. Используйте $(())
y=$((y+1))

### strongbash010 Не рекомендуется использовать переменные для временных файлов,
### лучше /tmp/binname_tmpcat.$$
rm -f /tmp/test-crab_syntax_check.black.$$

### strongbash011 Нельзя использовать временные файлы без $$, лучше rm -f /tmp/binname_tmpcat.$$
rm -f /tmp/test-crab_syntax_check.black.$$

### strongbash011 слишком большая глубина >5
FAIL011(){
	{
		{
			{
				{
					echo yes
				}
			}
		}
	}
	return 0
}

### strongbash012 pipe в "| \" требуется вынести на следующую строку.
echo yes | cat \
	| cat

ls
### strongbash013 ставьте пробел после # или используйте #} для ошибок indent'
# коммент без пробела
## кк
### ккк
#{
	echo
#}

### "strongbash014 Слишком большая функция больше 64 строк, выделите подфункции __f"
FAIL014(){
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	echo 1
	return 0
}

### strongbash015 Слишком большой линейный файл больше 64 строк, разбейте на функции
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2
echo 2

### strongbash016 Уберите конечные пробелы и tab
echo yes
echo yes

### strongbash029 Если мы берем stdout от функции мы обязаны прописать
### в первой строке set -e тк он снимается
FAIL029(){
	set -e
	echo TRUE
	return 0
}
ret=$( FAIL029 )


### strongbash006  В конце каждого файла должен быть echo SUCCES
echo S#U#C#C#E#S#S

### strongbash007  В конце каждого файла должен быть exit 0
echo "$0 $@ [$$] SUCCESS" >&2
exit 0
