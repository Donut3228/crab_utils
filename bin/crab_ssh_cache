#!/bin/bash

set -eu

[ "${1:---help}" = '--help' ] && { echo 'Example: ssh_cache $ssh_opt git@node1.carbonsoft.ru $sleep_sec'; exit 0; }
argc=$#
SSH_OPT=''
for((i=0;i<$argc-2;i++)); do
    SSH_OPT="$SSH_OPT $1"
    shift
done
DST=$1
[ -z "$USER" ] && USER="root"
[[ "$DST" != *@* ]] && DST="$USER@$DST"
shift
SEC=$1
SSH_PORT=22
if [[ "$SSH_OPT" == *'-p'* ]]; then
	SSH_PORT=${SSH_OPT##*-p }
	SSH_PORT=${SSH_PORT##*-p}
	SSH_PORT=${SSH_PORT%% *}
fi

[ -z "${HOME:-}" ] && $HOME="/tmp/"
ControlPath="$HOME/ssh_cache_${DST}_${SSH_PORT}"
if ! ps x | grep -v grep | grep ControlMaster=yes | grep "${SSH_OPT//-/[-]}" | grep -qm1 "$DST" \
	|| [ ! -S "$ControlPath" ] ; then
	rm -f "$ControlPath"
	if ! fgrep -qm1 '~/ssh_cache_%r@%h_%p' /etc/ssh/ssh_config; then
		echo 'Error /etc/ssh/ssh_config. Plz add: ControlPath ~/ssh_cache_%r@%h_%p'
		exit 1
	fi
	ssh $SSH_OPT \
		-o 'BatchMode=yes' \
		-o 'ServerAliveInterval=61'\
		-o 'ControlMaster=yes' ${DST} 'exit 0'

	setsid ssh -n -T $SSH_OPT \
		-o 'BatchMode=yes' \
		-o 'ServerAliveInterval=61'\
		-o 'ControlMaster=yes' ${DST} \
		sleep $SEC </dev/null &>/dev/null & disown -a
	LANG=C sleep 0.3
	# мы должны обязательно дождаться иначе следующий ssh сломает сокет и кеширования не будет
	for tt in 1 2 3 4 5; do
		[ -S "$ControlPath" ] && break
		sleep 1
	done
	[ ! -S "$ControlPath" ] && exit 1 || echo $ControlPath
fi
exit 0
